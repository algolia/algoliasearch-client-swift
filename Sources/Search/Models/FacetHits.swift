// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct FacetHits: Codable, JSONEncodable {
    /// Facet value.
    public var value: String
    /// Highlighted attribute value, including HTML tags.
    public var highlighted: String
    /// Number of records with this facet value. [The count may be approximated](https://support.algolia.com/hc/en-us/articles/4406975248145-Why-are-my-facet-and-hit-counts-not-accurate-).
    public var count: Int

    public init(value: String, highlighted: String, count: Int) {
        self.value = value
        self.highlighted = highlighted
        self.count = count
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case value
        case highlighted
        case count
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.value, forKey: .value)
        try container.encode(self.highlighted, forKey: .highlighted)
        try container.encode(self.count, forKey: .count)
    }
}

extension FacetHits: Equatable {
    public static func ==(lhs: FacetHits, rhs: FacetHits) -> Bool {
        lhs.value == rhs.value &&
            lhs.highlighted == rhs.highlighted &&
            lhs.count == rhs.count
    }
}

extension FacetHits: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.value.hashValue)
        hasher.combine(self.highlighted.hashValue)
        hasher.combine(self.count.hashValue)
    }
}
