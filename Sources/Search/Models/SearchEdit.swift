// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct SearchEdit: Codable, JSONEncodable {
    public var type: SearchEditType?
    /// Text or patterns to remove from the query string.
    public var delete: String?
    /// Text to be added in place of the deleted text inside the query string.
    public var insert: String?

    public init(type: SearchEditType? = nil, delete: String? = nil, insert: String? = nil) {
        self.type = type
        self.delete = delete
        self.insert = insert
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case delete
        case insert
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.type, forKey: .type)
        try container.encodeIfPresent(self.delete, forKey: .delete)
        try container.encodeIfPresent(self.insert, forKey: .insert)
    }
}

extension SearchEdit: Equatable {
    public static func ==(lhs: SearchEdit, rhs: SearchEdit) -> Bool {
        lhs.type == rhs.type &&
            lhs.delete == rhs.delete &&
            lhs.insert == rhs.insert
    }
}

extension SearchEdit: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.type?.hashValue)
        hasher.combine(self.delete?.hashValue)
        hasher.combine(self.insert?.hashValue)
    }
}
