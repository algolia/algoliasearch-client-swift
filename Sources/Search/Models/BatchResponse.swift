// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct BatchResponse: Codable, JSONEncodable {
    /// Unique identifier of a task.  A successful API response means that a task was added to a queue. It might not run
    /// immediately. You can check the task's progress with the [`task` operation](#tag/Indices/operation/getTask) and
    /// this `taskID`.
    public var taskID: Int64
    /// Unique record identifiers.
    public var objectIDs: [String]

    public init(taskID: Int64, objectIDs: [String]) {
        self.taskID = taskID
        self.objectIDs = objectIDs
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case taskID
        case objectIDs
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.taskID, forKey: .taskID)
        try container.encode(self.objectIDs, forKey: .objectIDs)
    }
}

extension BatchResponse: Equatable {
    public static func ==(lhs: BatchResponse, rhs: BatchResponse) -> Bool {
        lhs.taskID == rhs.taskID &&
            lhs.objectIDs == rhs.objectIDs
    }
}

extension BatchResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.taskID.hashValue)
        hasher.combine(self.objectIDs.hashValue)
    }
}
