// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public enum DestinationInput: Codable, JSONEncodable, AbstractEncodable {
    case destinationIndexName(DestinationIndexName)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case let .destinationIndexName(value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(DestinationIndexName.self) {
            self = .destinationIndexName(value)
        } else {
            throw DecodingError.typeMismatch(
                Self.Type.self,
                .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of DestinationInput")
            )
        }
    }

    public func GetActualInstance() -> Encodable {
        switch self {
        case let .destinationIndexName(value):
            value as DestinationIndexName
        }
    }
}

extension DestinationInput: Equatable {}
extension DestinationInput: Hashable {}
