// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct ABTestResponse: Codable, JSONEncodable {
    /// Index name of the A/B test variant (case-sensitive).
    public var index: String
    /// Unique A/B test identifier.
    public var abTestID: Int
    /// Unique identifier of a task.  A successful API response means that a task was added to a queue. It might not run
    /// immediately. You can check the task's progress with the [`task` operation](#tag/Indices/operation/getTask) and
    /// this `taskID`.
    public var taskID: Int64

    public init(index: String, abTestID: Int, taskID: Int64) {
        self.index = index
        self.abTestID = abTestID
        self.taskID = taskID
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case index
        case abTestID
        case taskID
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.index, forKey: .index)
        try container.encode(self.abTestID, forKey: .abTestID)
        try container.encode(self.taskID, forKey: .taskID)
    }
}

extension ABTestResponse: Equatable {
    public static func ==(lhs: ABTestResponse, rhs: ABTestResponse) -> Bool {
        lhs.index == rhs.index &&
            lhs.abTestID == rhs.abTestID &&
            lhs.taskID == rhs.taskID
    }
}

extension ABTestResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.index.hashValue)
        hasher.combine(self.abTestID.hashValue)
        hasher.combine(self.taskID.hashValue)
    }
}
