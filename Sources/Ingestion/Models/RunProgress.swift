// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import AlgoliaCore
#endif

public struct RunProgress: Codable, JSONEncodable {
    public var expectedNbOfEvents: Int?
    public var receivedNbOfEvents: Int?

    public init(expectedNbOfEvents: Int? = nil, receivedNbOfEvents: Int? = nil) {
        self.expectedNbOfEvents = expectedNbOfEvents
        self.receivedNbOfEvents = receivedNbOfEvents
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case expectedNbOfEvents
        case receivedNbOfEvents
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.expectedNbOfEvents, forKey: .expectedNbOfEvents)
        try container.encodeIfPresent(self.receivedNbOfEvents, forKey: .receivedNbOfEvents)
    }
}

extension RunProgress: Equatable {
    public static func ==(lhs: RunProgress, rhs: RunProgress) -> Bool {
        lhs.expectedNbOfEvents == rhs.expectedNbOfEvents &&
            lhs.receivedNbOfEvents == rhs.receivedNbOfEvents
    }
}

extension RunProgress: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.expectedNbOfEvents?.hashValue)
        hasher.combine(self.receivedNbOfEvents?.hashValue)
    }
}
