// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Dictionary type. If `null`, this dictionary type isn't supported for the language.
public struct DictionaryLanguage: Codable, JSONEncodable {
    /// Number of custom dictionary entries.
    public var nbCustomEntries: Int?

    public init(nbCustomEntries: Int? = nil) {
        self.nbCustomEntries = nbCustomEntries
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case nbCustomEntries
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.nbCustomEntries, forKey: .nbCustomEntries)
    }
}

extension DictionaryLanguage: Equatable {
    public static func ==(lhs: DictionaryLanguage, rhs: DictionaryLanguage) -> Bool {
        lhs.nbCustomEntries == rhs.nbCustomEntries
    }
}

extension DictionaryLanguage: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.nbCustomEntries?.hashValue)
    }
}
