// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import AlgoliaCore
#endif

public struct EventScoring: Codable, JSONEncodable {
    /// Event score.
    public var score: Int
    /// Event name.
    public var eventName: String
    public var eventType: PersonalizationEventType

    public init(score: Int, eventName: String, eventType: PersonalizationEventType) {
        self.score = score
        self.eventName = eventName
        self.eventType = eventType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case score
        case eventName
        case eventType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.score, forKey: .score)
        try container.encode(self.eventName, forKey: .eventName)
        try container.encode(self.eventType, forKey: .eventType)
    }
}

extension EventScoring: Equatable {
    public static func ==(lhs: EventScoring, rhs: EventScoring) -> Bool {
        lhs.score == rhs.score &&
            lhs.eventName == rhs.eventName &&
            lhs.eventType == rhs.eventType
    }
}

extension EventScoring: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.score.hashValue)
        hasher.combine(self.eventName.hashValue)
        hasher.combine(self.eventType.hashValue)
    }
}
