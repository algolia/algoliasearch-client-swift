// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct TransformationTryResponse: Codable, JSONEncodable {
    /// The array of records returned by the transformation service.
    public var payloads: [AnyCodable]
    public var error: TransformationError?

    public init(payloads: [AnyCodable], error: TransformationError? = nil) {
        self.payloads = payloads
        self.error = error
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case payloads
        case error
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.payloads, forKey: .payloads)
        try container.encodeIfPresent(self.error, forKey: .error)
    }
}

extension TransformationTryResponse: Equatable {
    public static func ==(lhs: TransformationTryResponse, rhs: TransformationTryResponse) -> Bool {
        lhs.payloads == rhs.payloads &&
            lhs.error == rhs.error
    }
}

extension TransformationTryResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.payloads.hashValue)
        hasher.combine(self.error?.hashValue)
    }
}
