// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct BigCommerceMetafield: Codable, JSONEncodable {
    /// Namespace of the metafield.
    public var namespace: String
    /// Key identifier of the metafield.
    public var key: String

    public init(namespace: String, key: String) {
        self.namespace = namespace
        self.key = key
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case namespace
        case key
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.namespace, forKey: .namespace)
        try container.encode(self.key, forKey: .key)
    }
}

extension BigCommerceMetafield: Equatable {
    public static func ==(lhs: BigCommerceMetafield, rhs: BigCommerceMetafield) -> Bool {
        lhs.namespace == rhs.namespace &&
            lhs.key == rhs.key
    }
}

extension BigCommerceMetafield: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.namespace.hashValue)
        hasher.combine(self.key.hashValue)
    }
}
