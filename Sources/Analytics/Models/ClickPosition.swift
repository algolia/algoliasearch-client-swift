// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Click position.
public struct ClickPosition: Codable, JSONEncodable {
    /// Range of positions in the search results, using the pattern `[start,end]`.  For positions 11 and up, click
    /// events are summed over the specified range. `-1` indicates the end of the list of search results.
    public var position: [Int]?
    /// Number of times this search has been clicked at that position.
    public var clickCount: Int?

    public init(position: [Int]? = nil, clickCount: Int? = nil) {
        self.position = position
        self.clickCount = clickCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case position
        case clickCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.position, forKey: .position)
        try container.encodeIfPresent(self.clickCount, forKey: .clickCount)
    }
}

extension ClickPosition: Equatable {
    public static func ==(lhs: ClickPosition, rhs: ClickPosition) -> Bool {
        lhs.position == rhs.position &&
            lhs.clickCount == rhs.clickCount
    }
}

extension ClickPosition: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.position?.hashValue)
        hasher.combine(self.clickCount?.hashValue)
    }
}
