// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct ListEventsResponse: Codable, JSONEncodable {
    public var events: [Event]
    public var pagination: Pagination
    public var window: Window

    public init(events: [Event], pagination: Pagination, window: Window) {
        self.events = events
        self.pagination = pagination
        self.window = window
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case events
        case pagination
        case window
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.events, forKey: .events)
        try container.encode(self.pagination, forKey: .pagination)
        try container.encode(self.window, forKey: .window)
    }
}

extension ListEventsResponse: Equatable {
    public static func ==(lhs: ListEventsResponse, rhs: ListEventsResponse) -> Bool {
        lhs.events == rhs.events &&
            lhs.pagination == rhs.pagination &&
            lhs.window == rhs.window
    }
}

extension ListEventsResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.events.hashValue)
        hasher.combine(self.pagination.hashValue)
        hasher.combine(self.window.hashValue)
    }
}
