// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Determines how many records of a group are included in the search results.  Records with the same value for the
/// `attributeForDistinct` attribute are considered a group. The `distinct` setting controls how many members of the
/// group are returned. This is useful for [deduplication and grouping](https://www.algolia.com/doc/guides/managing-results/refine-results/grouping/#introducing-algolias-distinct-feature).
///  The `distinct` setting is ignored if `attributeForDistinct` is not set.
public enum RecommendDistinct: Codable, JSONEncodable, AbstractEncodable {
    case bool(Bool)
    case int(Int)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case let .bool(value):
            try container.encode(value)
        case let .int(value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(Bool.self) {
            self = .bool(value)
        } else if let value = try? container.decode(Int.self) {
            self = .int(value)
        } else {
            throw DecodingError.typeMismatch(
                Self.Type.self,
                .init(
                    codingPath: decoder.codingPath,
                    debugDescription: "Unable to decode instance of RecommendDistinct"
                )
            )
        }
    }

    public func GetActualInstance() -> Encodable {
        switch self {
        case let .bool(value):
            value as Bool
        case let .int(value):
            value as Int
        }
    }
}

extension RecommendDistinct: Equatable {}
extension RecommendDistinct: Hashable {}
