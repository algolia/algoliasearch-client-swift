// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct EstimateABTestResponse: Codable, JSONEncodable {
    /// Estimated number of days needed to reach the sample sizes required for detecting the configured effect. This
    /// value is based on historical traffic.
    public var durationDays: Int64?
    /// Sample size estimates for each variant. The first element is the control variant. Each element is the estimated
    /// number of searches required to achieve the desired statistical significance.
    public var sampleSizes: [Int64]?

    public init(durationDays: Int64? = nil, sampleSizes: [Int64]? = nil) {
        self.durationDays = durationDays
        self.sampleSizes = sampleSizes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case durationDays
        case sampleSizes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.durationDays, forKey: .durationDays)
        try container.encodeIfPresent(self.sampleSizes, forKey: .sampleSizes)
    }
}

extension EstimateABTestResponse: Equatable {
    public static func ==(lhs: EstimateABTestResponse, rhs: EstimateABTestResponse) -> Bool {
        lhs.durationDays == rhs.durationDays &&
            lhs.sampleSizes == rhs.sampleSizes
    }
}

extension EstimateABTestResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.durationDays?.hashValue)
        hasher.combine(self.sampleSizes?.hashValue)
    }
}
