// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Facet attribute. Only recommendations with the same value (or only recommendations with a different value) as the
/// original viewed item are included.
public struct AutoFacetFilter: Codable, JSONEncodable {
    /// Facet attribute.
    public var facet: String?
    /// Whether the filter is negative. If true, recommendations must not have the same value for the `facet` attribute.
    /// If false, recommendations must have the same value for the `facet` attribute.
    public var negative: Bool?

    public init(facet: String? = nil, negative: Bool? = nil) {
        self.facet = facet
        self.negative = negative
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case facet
        case negative
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.facet, forKey: .facet)
        try container.encodeIfPresent(self.negative, forKey: .negative)
    }
}

extension AutoFacetFilter: Equatable {
    public static func ==(lhs: AutoFacetFilter, rhs: AutoFacetFilter) -> Bool {
        lhs.facet == rhs.facet &&
            lhs.negative == rhs.negative
    }
}

extension AutoFacetFilter: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.facet?.hashValue)
        hasher.combine(self.negative?.hashValue)
    }
}
