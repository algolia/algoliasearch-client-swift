// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Configuration for the smallest difference between test variants you want to detect.
public struct MinimumDetectableEffect: Codable, JSONEncodable {
    /// Smallest difference in an observable metric between variants. For example, to detect a 10% difference between
    /// variants, set this value to 0.1.
    public var size: Double
    public var metric: EffectMetric

    public init(size: Double, metric: EffectMetric) {
        self.size = size
        self.metric = metric
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case size
        case metric
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.size, forKey: .size)
        try container.encode(self.metric, forKey: .metric)
    }
}

extension MinimumDetectableEffect: Equatable {
    public static func ==(lhs: MinimumDetectableEffect, rhs: MinimumDetectableEffect) -> Bool {
        lhs.size == rhs.size &&
            lhs.metric == rhs.metric
    }
}

extension MinimumDetectableEffect: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.size.hashValue)
        hasher.combine(self.metric.hashValue)
    }
}
