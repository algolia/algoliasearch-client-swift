// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Paginated API response.
public struct Pagination: Codable, JSONEncodable {
    /// Number of pages in the API response.
    public var nbPages: Int
    /// Page of the API response to retrieve.
    public var page: Int
    /// Number of items in the API response.
    public var nbItems: Int
    /// Number of items per page.
    public var itemsPerPage: Int

    public init(nbPages: Int, page: Int, nbItems: Int, itemsPerPage: Int) {
        self.nbPages = nbPages
        self.page = page
        self.nbItems = nbItems
        self.itemsPerPage = itemsPerPage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case nbPages
        case page
        case nbItems
        case itemsPerPage
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.nbPages, forKey: .nbPages)
        try container.encode(self.page, forKey: .page)
        try container.encode(self.nbItems, forKey: .nbItems)
        try container.encode(self.itemsPerPage, forKey: .itemsPerPage)
    }
}

extension Pagination: Equatable {
    public static func ==(lhs: Pagination, rhs: Pagination) -> Bool {
        lhs.nbPages == rhs.nbPages &&
            lhs.page == rhs.page &&
            lhs.nbItems == rhs.nbItems &&
            lhs.itemsPerPage == rhs.itemsPerPage
    }
}

extension Pagination: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.nbPages.hashValue)
        hasher.combine(self.page.hashValue)
        hasher.combine(self.nbItems.hashValue)
        hasher.combine(self.itemsPerPage.hashValue)
    }
}
