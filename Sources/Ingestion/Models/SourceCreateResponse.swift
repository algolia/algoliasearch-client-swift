// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct SourceCreateResponse: Codable, JSONEncodable {
    /// Universally uniqud identifier (UUID) of a source.
    public var sourceID: String
    /// Descriptive name of the source.
    public var name: String
    /// Date of creation in RFC 3339 format.
    public var createdAt: String

    public init(sourceID: String, name: String, createdAt: String) {
        self.sourceID = sourceID
        self.name = name
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sourceID
        case name
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.sourceID, forKey: .sourceID)
        try container.encode(self.name, forKey: .name)
        try container.encode(self.createdAt, forKey: .createdAt)
    }
}

extension SourceCreateResponse: Equatable {
    public static func ==(lhs: SourceCreateResponse, rhs: SourceCreateResponse) -> Bool {
        lhs.sourceID == rhs.sourceID &&
            lhs.name == rhs.name &&
            lhs.createdAt == rhs.createdAt
    }
}

extension SourceCreateResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.sourceID.hashValue)
        hasher.combine(self.name.hashValue)
        hasher.combine(self.createdAt.hashValue)
    }
}
