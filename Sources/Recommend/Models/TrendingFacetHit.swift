// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Trending facet hit.
public struct TrendingFacetHit: Codable, JSONEncodable {
    /// Recommendation score.
    public var score: Double?
    /// Facet attribute. To be used in combination with `facetValue`. If specified, only recommendations matching the
    /// facet filter will be returned.
    public var facetName: String
    /// Facet value. To be used in combination with `facetName`. If specified, only recommendations matching the facet
    /// filter will be returned.
    public var facetValue: String

    public init(score: Double? = nil, facetName: String, facetValue: String) {
        self.score = score
        self.facetName = facetName
        self.facetValue = facetValue
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case score = "_score"
        case facetName
        case facetValue
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.score, forKey: .score)
        try container.encode(self.facetName, forKey: .facetName)
        try container.encode(self.facetValue, forKey: .facetValue)
    }
}

extension TrendingFacetHit: Equatable {
    public static func ==(lhs: TrendingFacetHit, rhs: TrendingFacetHit) -> Bool {
        lhs.score == rhs.score &&
            lhs.facetName == rhs.facetName &&
            lhs.facetValue == rhs.facetValue
    }
}

extension TrendingFacetHit: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.score?.hashValue)
        hasher.combine(self.facetName.hashValue)
        hasher.combine(self.facetValue.hashValue)
    }
}
