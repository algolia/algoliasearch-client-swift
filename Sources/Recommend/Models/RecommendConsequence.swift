// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Effect of the rule.
public struct RecommendConsequence: Codable, JSONEncodable {
    /// Exclude items from recommendations.
    public var hide: [HideConsequenceObject]?
    /// Place items at specific positions in the list of recommendations.
    public var promote: [PromoteConsequenceObject]?
    public var params: ParamsConsequence?

    public init(
        hide: [HideConsequenceObject]? = nil,
        promote: [PromoteConsequenceObject]? = nil,
        params: ParamsConsequence? = nil
    ) {
        self.hide = hide
        self.promote = promote
        self.params = params
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hide
        case promote
        case params
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.hide, forKey: .hide)
        try container.encodeIfPresent(self.promote, forKey: .promote)
        try container.encodeIfPresent(self.params, forKey: .params)
    }
}

extension RecommendConsequence: Equatable {
    public static func ==(lhs: RecommendConsequence, rhs: RecommendConsequence) -> Bool {
        lhs.hide == rhs.hide &&
            lhs.promote == rhs.promote &&
            lhs.params == rhs.params
    }
}

extension RecommendConsequence: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.hide?.hashValue)
        hasher.combine(self.promote?.hashValue)
        hasher.combine(self.params?.hashValue)
    }
}
