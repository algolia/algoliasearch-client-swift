// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Extra data that can be used in the search UI.  You can use this to control aspects of your search UI, such as the
/// order of facet names and values without changing your frontend code.
public struct SearchRenderingContent: Codable, JSONEncodable {
    public var facetOrdering: SearchFacetOrdering?
    public var redirect: SearchRedirectURL?
    public var widgets: SearchWidgets?

    public init(
        facetOrdering: SearchFacetOrdering? = nil,
        redirect: SearchRedirectURL? = nil,
        widgets: SearchWidgets? = nil
    ) {
        self.facetOrdering = facetOrdering
        self.redirect = redirect
        self.widgets = widgets
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case facetOrdering
        case redirect
        case widgets
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.facetOrdering, forKey: .facetOrdering)
        try container.encodeIfPresent(self.redirect, forKey: .redirect)
        try container.encodeIfPresent(self.widgets, forKey: .widgets)
    }
}

extension SearchRenderingContent: Equatable {
    public static func ==(lhs: SearchRenderingContent, rhs: SearchRenderingContent) -> Bool {
        lhs.facetOrdering == rhs.facetOrdering &&
            lhs.redirect == rhs.redirect &&
            lhs.widgets == rhs.widgets
    }
}

extension SearchRenderingContent: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.facetOrdering?.hashValue)
        hasher.combine(self.redirect?.hashValue)
        hasher.combine(self.widgets?.hashValue)
    }
}
