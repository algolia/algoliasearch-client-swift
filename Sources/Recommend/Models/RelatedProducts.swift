// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct RelatedProducts: Codable, JSONEncodable {
    public var model: RelatedModel
    /// Unique record identifier.
    public var objectID: String
    public var fallbackParameters: FallbackParams?

    public init(model: RelatedModel, objectID: String, fallbackParameters: FallbackParams? = nil) {
        self.model = model
        self.objectID = objectID
        self.fallbackParameters = fallbackParameters
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case model
        case objectID
        case fallbackParameters
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.model, forKey: .model)
        try container.encode(self.objectID, forKey: .objectID)
        try container.encodeIfPresent(self.fallbackParameters, forKey: .fallbackParameters)
    }
}

extension RelatedProducts: Equatable {
    public static func ==(lhs: RelatedProducts, rhs: RelatedProducts) -> Bool {
        lhs.model == rhs.model &&
            lhs.objectID == rhs.objectID &&
            lhs.fallbackParameters == rhs.fallbackParameters
    }
}

extension RelatedProducts: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.model.hashValue)
        hasher.combine(self.objectID.hashValue)
        hasher.combine(self.fallbackParameters?.hashValue)
    }
}
