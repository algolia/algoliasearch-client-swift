// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

/// Search parameter.
public struct SearchDictionaryEntriesParams: Codable, JSONEncodable {
    /// Search query.
    public var query: String
    /// Page of search results to retrieve.
    public var page: Int?
    /// Number of hits per page.
    public var hitsPerPage: Int?
    public var language: SearchSupportedLanguage?

    public init(query: String, page: Int? = nil, hitsPerPage: Int? = nil, language: SearchSupportedLanguage? = nil) {
        self.query = query
        self.page = page
        self.hitsPerPage = hitsPerPage
        self.language = language
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case query
        case page
        case hitsPerPage
        case language
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.query, forKey: .query)
        try container.encodeIfPresent(self.page, forKey: .page)
        try container.encodeIfPresent(self.hitsPerPage, forKey: .hitsPerPage)
        try container.encodeIfPresent(self.language, forKey: .language)
    }
}

extension SearchDictionaryEntriesParams: Equatable {
    public static func ==(lhs: SearchDictionaryEntriesParams, rhs: SearchDictionaryEntriesParams) -> Bool {
        lhs.query == rhs.query &&
            lhs.page == rhs.page &&
            lhs.hitsPerPage == rhs.hitsPerPage &&
            lhs.language == rhs.language
    }
}

extension SearchDictionaryEntriesParams: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.query.hashValue)
        hasher.combine(self.page?.hashValue)
        hasher.combine(self.hitsPerPage?.hashValue)
        hasher.combine(self.language?.hashValue)
    }
}
