// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct SourceUpdateDocker: Codable, JSONEncodable {
    public var registry: DockerRegistry?
    /// Docker image name.
    public var image: String?
    /// Docker image version.
    public var version: String?
    /// Configuration of the spec.
    public var configuration: AnyCodable

    public init(
        registry: DockerRegistry? = nil,
        image: String? = nil,
        version: String? = nil,
        configuration: AnyCodable
    ) {
        self.registry = registry
        self.image = image
        self.version = version
        self.configuration = configuration
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case registry
        case image
        case version
        case configuration
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.registry, forKey: .registry)
        try container.encodeIfPresent(self.image, forKey: .image)
        try container.encodeIfPresent(self.version, forKey: .version)
        try container.encode(self.configuration, forKey: .configuration)
    }
}

extension SourceUpdateDocker: Equatable {
    public static func ==(lhs: SourceUpdateDocker, rhs: SourceUpdateDocker) -> Bool {
        lhs.registry == rhs.registry &&
            lhs.image == rhs.image &&
            lhs.version == rhs.version &&
            lhs.configuration == rhs.configuration
    }
}

extension SourceUpdateDocker: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.registry?.hashValue)
        hasher.combine(self.image?.hashValue)
        hasher.combine(self.version?.hashValue)
        hasher.combine(self.configuration.hashValue)
    }
}
