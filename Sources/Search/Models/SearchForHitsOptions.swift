// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(AlgoliaCore)
    import AlgoliaCore
#endif

public struct SearchForHitsOptions: Codable, JSONEncodable {
    /// Index name (case-sensitive).
    public var indexName: String
    public var type: SearchTypeDefault?

    public init(indexName: String, type: SearchTypeDefault? = nil) {
        self.indexName = indexName
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case indexName
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.indexName, forKey: .indexName)
        try container.encodeIfPresent(self.type, forKey: .type)
    }
}

extension SearchForHitsOptions: Equatable {
    public static func ==(lhs: SearchForHitsOptions, rhs: SearchForHitsOptions) -> Bool {
        lhs.indexName == rhs.indexName &&
            lhs.type == rhs.type
    }
}

extension SearchForHitsOptions: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.indexName.hashValue)
        hasher.combine(self.type?.hashValue)
    }
}
